Microsoft Build May 19-22, 2025 Session: BRK165 Speakers: Aaron Bjork, Abram Jackson

Aaron Bjork: All right, welcome, everyone. Thanks for joining us 6:00 on the first day of Build. So we are glad you're here. Thank you for being here. You found us up here on the third floor of the other building. Great to have you join us. Today, we are going to spend the next hour talking about building agents for Microsoft 365 Copilot. My name is Aaron Bjork. I'm a Product Manager and I work on the Copilot Studio Team. And I'm joined on stage by Abram Jackson.

Abram Jackson: Hey. My name is Abram Jackson. I work on Microsoft 365 Copilot extensibility. And it is so awesome to be able to talk to you all today. This is one of my favorite things to do.

Aaron Bjork: All right. So we're going to jump right in. We've got a lot of ground to cover. And we've got a bunch of demos and things that we're going to get started with. So, Abram, to get us started, why don't you remind us a bit what is Copilot and what is an agent.

Abram Jackson: Well, that is a good place to start.

Aaron Bjork: Yes.

Abram Jackson: What is Copilot indeed? We use the name for a lot of things, but we're pretty intentional about that. We want Copilot to be your personal assistant, that you use it and it is helping you with your work. We're pretty intentional about matching the products to that name. It isn't "the pilot," it isn't running off without you, it is your copilot and it is assisting you. And the idea is that Copilot knows about you and it knows about your work, it knows what projects you're working on, it knows what you are trying to accomplish, it certainly knows who your colleagues are. And the goal of Copilot is to help you achieve more for your work to make you look great as you are using AI assistance in your work through your personal assistant. Agents are specialists to represent business processes or to understand a space. This is an excellent use for agents of the grounding information, the knowledge, and the APIs, and the data, to process and understand and work through some business process. And "business process" sounds like kind of a funny term, but, really, we just mean work stuff is really what agents are helping us do. Now, agents are also the implementer of many business processes. And we interact with them through Copilot. As Copilot knows the most about you and helps you, it helps you interact with these business processes and get more work done. That's the idea of Copilot and agents, that's what we're trying to achieve and that's covered. But, Aaron, why do we need agents for this exactly?

Aaron Bjork: All right. So let's talk about why we need agents. As AI has really burst onto the scene these past few years, agents really represent the package or the application package where AI is coming to life for our businesses. So agents are where we move beyond just working with an AI model and where we start to blend an AI model with domain expertise, with knowledge about our business and, ultimately, business outcomes that we want to achieve. Now, the reality is that agents are going to change every function and every process in our organizations. They're going to be transformational in that way. In fact, IDC, recently, if you are familiar with IDC, they're an analyst, they projected that there's over a billion new business process agents that are going to be created over the next four years. So pretty incredible numbers when you think about a billion new agents. Now, as we think then about the idea of Copilot and agents together, we need to start to think about what this transformation looks like. And, first and foremost, we're moving into a world that's agent centric. So we're sort of moving out of what we would call the app-centric world and into an agent-centric world. And one of the ways that I like to think about that visually is if you imagine an orchestra and imagine an orchestra playing a symphony. You've got lots of people like yourself sitting in a room together, they're organized, each one plays an instrument, each one has practiced that instrument, each one is reading from sheet music. And, actually, you have somebody standing up front that's conducting it all, they're putting it all together. The result is beautiful music. It's absolutely beautiful. But that's really a representation of that app-centric world where we've got lots of musicians, lots of applications, and each one has a specialized and individualized purpose. Now, when we think of the agent-centric world, imagine a jazz quartet. Imagine four people, a saxophone, a bass, somebody on a trumpet, maybe a drummer. And they're playing music, but they're not reading from sheet music. They're playing off of each other. They're listening to what the other musician is playing and they're improvising as they go. That's a great illustration of what that agent-centric world starts to look like and really starts to change the way we engage with technology.

Abram Jackson: You've heard Satya say now lots of times, if you've been watching his keynotes, that Copilot is the UI for AI. And he talks about what that means. Copilot, it does know about you and it knows about your work, it knows about your M365 data and it knows about your other data systems and enterprise software that you have connected in. But without agents, it's not connected to your work systems. It doesn't operate and take charge and change those other work systems. So agents are the bridge from Copilot into those work systems where your business gets done, the systems of record, your ticket tracking, your customer databases and whatever other information you are using for your enterprise software. So agents are connecting Copilot into that. And, when these agents are added into Copilot, Copilot is assisting you and interacting with those systems where your work is represented and where it gets done. Now, Microsoft 365, that's what we're here talking about, it's in the session title. It's the place where hundreds of millions of workers get their work done. It's where employees go to get their jobs done. Whether you're using Teams or Outlook, Word, Excel, PowerPoint and many other applications in Microsoft 365, this is

where knowledge workers or information workers do their work. And that's where Copilot lives. And it's integrated and connected with all of those things. And it's the safest, most governed and secure place for this AI to be running along with all of these agents.

Aaron Bjork: So we're going to be building our agents in M365 Copilot, that's the place we're going to build them. And who's going to build all of these agents, Abram?

Abram Jackson: Well, it starts with new and existing developers. I bet many of you here in the audience, you might find your names up here on that slide or maybe your company name isn't up there quite yet. But many of you and others are already building agents for Microsoft 365 Copilot. We're going to have some demos from some of these partners a little bit later in the session. We're very excited to show you that. But, first, let's talk about what makes up an agent. That's where we want to start. So, Aaron, what does the architecture of an agent look like?

Aaron Bjork: Okay. So, when we think about the architecture of an agent, we're going to talk about all the different boxes that you see on the screen here and we're going to bring this slide back as we go through the different options that you have for building. But you can kind of think of the basics as knowledge tools and models. That kind of represents the foundation of what we need to build an agent. But let's walk through each one of these one at a time and sort of describe them. So, from the left, the first thing that we have is we have an orchestrator in an agent. And an orchestrator is, basically, the control layer in an AI agent. It kind of manages how and when to use different components. So think about where to invoke a model, where to invoke an API, when to call out to a different server or something. That's the goal and the role of the orchestrator. The orchestrator then pairs with the model. And the model really acts as sort of the brain of the agent. So one of the ways to think about this is think of the model being the brain of the agent, but the orchestrator really being the executive function. They sort of work together hand-in-hand. And the orchestrator is telling the model what to do and when to do it. Now, from there, we have knowledge. We talk a lot about knowledge when we talk about AI agents. We're going to show you how you can connect knowledge to your AI agents here in a bit. We call this grounding. And that's the idea that when you bring knowledge into an agent, you're really connecting that agent to real, verifiable and contextually relevant information. It's what makes sure that your agent can be relevant and isn't just making things up on the fly. From there, we have tools. We're going to show you a wide variety of tools today and things that you can use to plug into your agent. Tools are what we use to do things. So these are the things that actually take action. They can access real-time data, they can call out to first- and third-party systems, they can go do things on behalf of you and really take action in your agent. And then, finally, you can establish things like triggers or whatnot to invoke an agent so you can have it work autonomously. One of the real goals of agents is to make sure that they can be working for you. And, of course, you've got to give them instructions on how to do that. And then, finally, I think, again, Satya announced this in the keynote and we'll talk about it a little bit briefly today, but one of the real goals is to build teams of agents where agents can work together,

talk together. And we'll show you in this session how you can connect those up and how they can start to work together. Okay. So, Abram, why don't you take us through the options that we have for building agents for M365 Copilot and then we'll go from there?

Abram Jackson: All right, that sounds good to me. I hope it sounds good to everybody here in the audience. The idea and the reason why we wanted to talk through those ingredients of an agent, even if you all already know this by this point in the day at this conference, is that anyone can create an agent with these ingredients. It doesn't matter who you are and your persona and the way that you operate. Now, many of you I'm sure are professional developers and others have never opened Visual Studio. And that is fine. Anyone working on the web, Windows, Office applications and soon, in the next few days, in the mobile Microsoft 365 Copilot app can work with these agents. These are all Microsoft 365 users, whether they have their Microsoft 365 Copilot license or not. They can use the agents that you build using these same ingredients for any of these personas. That is the idea here, that it doesn't matter which one of these tools that you're using, you have access to create really powerful agents for all of the world's knowledge workers. That is the idea. So, from low-code or even no-code and end users all the way up to professional developers, we've got options for you. And that's how we're going to be organizing this presentation about each of these sections. So, no matter which persona you are, or you represent, or are in your company, you can have those right tools and those same ingredients and features. We'll also talk a little bit about agents working together, no matter which set of tools they are built from. And I am going to show a demo of that as well of doing multi-agent in Microsoft 365 Copilot. But not yet. First, I want to talk about Agent Builder. Now, Agent Builder is awesome. So IDC says we need a billion agents. Well, that's one for, what, every 7.5 people or so in the world and that's just people, not even adults. So, if you haven't built an agent yet, the IDC says that you need to is pretty much the idea here. Now, I love Agent Builder and it's perfect for team processes, right, for three people that are working together or six, right, and they've got an individual part of it. Now, as a large enterprise, you might have a standard ticket tracking system, but the way every individual team uses it is a little bit different. So we want this to be available for end users so that they don't need to go ask for an IT project in order to automate and accelerate their work and their team processes. So we just talked about these ingredients. For no-code and for Agent Builder, the easiest things to get started with are the knowledge and the tools. Now, this uses the orchestrator of Microsoft 365 Copilot. Now, Microsoft 365 Copilot is the world's most powerful AI system in the world for work. And we enable it for all of these end users to just plug in their knowledge, their tools and capabilities and workflow. In Agent Builder, the agents that you build, they are continuously updated to the latest foundation models. They get better, and better, and better, over time. The end user's job is to bring in the knowledge and the tools to represent their business process. And that agent is going to be incredibly powerful forever. Now, this is how I personally, as an engineer, create the majority of my personal agents. I use Agent Builder a lot. I make many, many agents with Agent Builder, even though I can use the pro-code tools, because I know how powerful it is. So we're making it as easy as

possible to make highly capable agents yourself, make you and your team more productive. I've got a few features to talk about here that are brand new and we're talking about here at Build for the first time. Now in your agents that you build with Agent Builder you can now access grounding in your team's chat history, your email, other office entities including Office 365, SharePoint, OneDrive for Business. Whatever connectors your organization has set up, all of these are all available now in Agent Builder for your team and your individual agents. You can also now ground on specific websites and web domains. And, finally, you can embed files directly into that agent. Now, you can already represent files from OneDrive in Agent Builder. We announced that before. But, when they're embedded into the agent, now when you share the agent, that person receiving the agent has full access to those files that you've embedded. So they're going to get the same experience as you did when you're building it. Finally, I guess in Agent Builder, let me show you the rebuilt user experience to make this simpler and easier to use. All right. We are looking here at the new Agent Store. So this was recently announced and it's the brand-new way to see your agents that you have installed already or acquired and that are available for you to go acquire. And we built this experience ground up to be awesome. That was the idea to accelerate end users and using agents. So, first, I'm just going to click here into "Search agents." And you can see that I've got all of the details of these agents that I've used recently. And, of course, I can search for agents that I've got acquired or that I want to go acquire or that helped me with a specific process. We have the agents that I've already acquired and I can interact with them here. And this is the agent that I just built, the Build 2025 Concierge. So I just clicked on the little dots next to it and I can uninstall or share it with anybody that I'd like right here. We've also rebuilt this navigation pane that's over on the left side of the screen to show our agents, our conversations, our pages. You may have seen other sessions talking about Search and Notebooks and Create. But we're here to talk about agents. So let's look at my Build 2025 Concierge and click on these little dots that say "More." And I'm going to edit. Opening up now is our brand-new interface to Agent Builder, designed to be native here into Copilot and be integrated very simply. So there's plenty that I can do here, but I'm not going to show you all of it. There's a lot more details in later sessions this week. But I do want to highlight just a couple of pieces. First, we've got the name, description and instructions as I scroll down here. I'm not going to show all of the instructions. I do want to show you all this new Knowledge Picker is what we call it. I'll click in here. You can see that I can select all websites, all of the websites, or all of my files that I have access to or the receiving user is going to have access to and Teams chats. This is all very useful. But I can search in here now for the information that I'm looking for. We're here in Breakout 165. And so I could pull up this PowerPoint presentation that we're looking at right now and ground our agent in this. But that's not what I'm doing in this one. Here, I've uploaded the "Book of News" that we published this morning. Now, this is an awesome resource, if you're not already familiar with it, that's got all of the announcements of Microsoft Build. And I thought that would be a great place to build an agent. It's very information dense. I've also grounded this in this website of build.microsoft.com. And so we have all of the sessions and all of the information that we have on the website. And I made this agent. It took me just a couple of

minutes to do all of this. I've selected code interpreter. We give end users the ability to add these pre-built capabilities and starter prompts. But let's go ahead and look at how this agent operates. Let's try this conversation starter that I had in the Agent Builder. I'm going to click on it. "Tell me about the new features of Copilot Studio?" I'll go ahead and click on the arrow to submit this. It's only going to take a second in order to begin the response. And you can see that we have a lot of features that we've been talking about for Copilot Studio including multi-agent orchestration and model fine-tuning and many others. Because this is grounded in the website, it has the information. This session of What's New in Copilot Studio would be an excellent one for us to attend, if we were doing that. Okay.

[ Applause ]

Sure, we can clap. We can clap. I thought that was pretty good. Now, it might be a little bit too early in the presentation to do one more thing, but I am very excited about what Lumen has been exploring with us

[laughter]

. Now, Lumen's been exploring how the agents that they build, that they're building inside of their own organization for their own use, could be included in our new Researcher agent. So I pre-recorded this one, but it was really easy to set up. So I'm asking Researcher to create an executive financial report on Lumen including financial performance and recent press releases. This is also sped up because this can take several minutes and we don't have several minutes in this session. So Researcher, as you've already seen in the keynotes and in other presentations, is going to perform a lot of work. And this is really incredible. I strongly recommend that anybody here goes and tries Researcher. Now, what you see here in this last step, it's contacting the Lumen Quarterly Report Agent. So this is an agent that was developed by folks at Lumen in order to structure how they like to consume quarterly reports. And so Researcher is asking, "Hey, Lumen Quarterly Report Agent, how do you want to structure this report" and it's getting the information back. This last step is actually beginning to generate this information and we see very detailed information in the result and the style that the Lumen declarative agent provided. Now, this was really cool. I loved working with Lumen on this demo. This one isn't available for everybody here yet to build in your own agents, but I do want to tell you that it is coming, that we are working on this kind of multi-agent support including within Researcher. And, just as an aside, I keep trying this with other agents and it works the first try every single time. It is really astounding. I can't wait to open up a preview for this capability. But we have a lot more to talk about and there's other sessions this week that are going to talk more about Agent Builder and declarative agents so I want to move on. Now, after I've prototyped or created something for myself in Agent Builder, if I want to start sharing this with other people, I will often go bring this information into Copilot Studio. And then I can customize it more and work with it in a lot more detail. But I'll let Aaron cover that.

Aaron Bjork: All right. Thanks, Abram. So, yeah, let's shift gears a little bit and now let's talk about Copilot Studio more specifically. So I think we need to start with kind of grounding in what is Copilot Studio. Well, in its simplest form, Copilot Studio is a SaaS agent platform and it's designed to help you really quickly and efficiently build agents that are ready to deploy in your organization. You can go from starting point to deployed with metrics, with analytics, with safety rails, with responsible AI literally in hours if not a number of days, which something else might take you weeks to build on end. So it's designed to help you move very, very quickly. It includes tools for creating agents, adding knowledge, instructions, connecting to different tools within your organization, creating autonomous workflows and lots, lots more. Now, when we think about that architecture that we showed earlier, this is that same picture, when you're using Copilot Studio, you really have access to all the shaded areas. So you can pick different publishing channels. Of course, we're going to show you what publishing to M365 Copilot looks like, but you can publish to other destinations as well. You can pick foundation models. So we're going to provide you with a list of managed models and you can connect through Azure AI Foundry for additional models as well. And then you can tailor knowledge, tools and the autonomous aspects of your agent as well. The one thing you won't have access to is the orchestrator. Right now, that is sequestered off. But I think, over time, that will probably be opened up as well. Now, we've got lots to show you in the demo. Before I jump right in, I'm going to highlight four features that I think are sort of noteworthy that I want you to sort of remember. The first is you can now configure your agents to use any model that's deployed in Azure AI Foundry. So there's over 1,900 models there. It's growing all the time. And, while you can use the managed models that come with Copilot Studio, you can also reach out and connect to any of those models there. So I'll show you what that looks like. Copilot Studio also now comes with a new preview feature called Computer Use Agents, or CUA. You saw a little bit of that in the keynote this morning. There's a session that's going to go into more detail on it. We won't cover it here today. But CUA is really exciting because it allows your agent to interact with computers in the same way that humans do. So it's very, very cool. If you haven't seen it, please go check it out. Third, Copilot Studio agents now support agent-to-agent interactions. Again, I think that's a theme of Build this year. So we'll look at that. And then, finally, you can use MCP, or Model Context Protocol, to connect your agents up with other servers that are out there and connect them with both first- and third-party systems. So why don't we just go ahead and jump right into a demo? Got to push the right button there. All right. So I'm going to move into Copilot Studio here. I'm going to take off my glasses because, otherwise, I can't see my screen. So, first of all, this is what Copilot Studio looks like. And you'll see I have a whole bunch of agents here that I've built. I'm going to jump into one that I built just last week called Contoso Employee Resources. And we're going to get a little bit of a tour of this agent. So this agent is really designed to help employees that are onboarding into a fictitious company called Contoso. You can see right out of the gate here that it's helping find resources that are accessed on the company's SharePoint site. We've got Generative Orchestration turned on so the model is going to be used to help orchestrate that agent. And, right out of the gate, we can even see that this particular agent is using

GPT-4o as its default agent. Now, of course, I can accept that default and stick with it or I can just go simply edit that. And editing takes you right into a place where we give you full control over the RAG for your agent. So this is not just model choice, but you can do things like change the moderation level, you can provide specific instructions on how the model should reply. And, if you want to change the model, you can choose from a host of managed models that we have. In this case, you can see that GPT-4.1 mini, which was just released a few weeks ago, is our preview model. Or I can go ahead and select any model that is deployed in Azure AI Foundry by simply providing the API key and the connection string here to go ahead and do that. We're not going to do that today in this session, but it's very, very easy to change that. Now, the other thing that I want to point out about this agent is that not only is it an agent that I can build very, very easily, but I can understand how it's being used. And, again, we don't build agents for no reason. We build agents to achieve business outcomes, to make our employees more productive, to change the way that we work. One of the really, really powerful capabilities of Copilot Studio is that it comes with a complete analytics backend that exposes how people are interacting with your agent directly to you. So you can come in here and look at different sessions, you can look at which knowledge sources are being used, you can look at which tools are being used. You can even go through and write tests and upload tests that evaluate your agent and the outcomes that you want to see. So this provides you not just a way to build an agent, but a way to understand if that agent is having the business outcome that you expect. So very, very powerful. And, again, all right out of the box. Very, very easy to use and interact with. Now, back on that Home page, I'm just going to kind of keep scrolling and give you the tour here, you'll notice that I've got a set of instructions that are provided for the agent. I did this through a similar sort of Agent Builder experience, like Abram showed you earlier. And then you can see that I've got this just grounded in one knowledge source. And that knowledge source happens to be the SharePoint site that we use within this particular company. So I could easily add more knowledge sources if I wanted. So, when I add knowledge here, I'm provided with a number of out-of-the-box connectors. You can see that a number are recommended here. And then I can see additional suggestions or more as well. So I'm going to back out of that. We don't need to add more knowledge to this particular agent today. But what we are going to do is go in and look at tools. Now, remember when I talked about the architecture. Tools are how you instruct your agent to start go doing things. Okay? And there's a number of ways that you can do this. One of the most exciting new ways in Copilot Studio is what are called prompts. Now, prompts are really a way for you to fine-tune the way that your agent answers specific questions. And you get a lot of power here. So I'm going to go ahead and click "New Tool." And, when I do that, I will click that I want a new prompt. And I'm going to get an experience here that we call the Prompt Builder. Now, the Prompt Builder is where I can come in and I can actually instruct the agent to address very, very specific types of questions and instruct it to operate in a certain way. Now, I could describe a type of prompt that I want or I could just simply choose from a prompt library. And this is hundreds of different prompts that are pre-built for you and you can go ahead and just choose these. So I might say, "I want to respond to a particular complaint." You will

notice that it pastes the prompt in there, it provides some input text and then I can go ahead and test that particular prompt so you can see the outcome of it. Now, what's really cool here is that this is another place where you also get model choice. So, again, this is not an agent that's just using one model, but you can start to tailor specific parts of your agent to use specialized models. And, again, you can choose from pre-built models or hosted models that we have for you or, again, you can point to a model that you've got hosted in your Azure subscription as well. So very, very powerful in terms of being able to tailor and refine that agent to the specific needs of your company. So we're not going to add that prompt today. But the other thing that I want to highlight is MCP, or Model Context Protocol. So MCP is really an emerging standard for how agents talk to first- and third-party systems. It uses a client server sort of metaphor. In this case, your agent is an MCP client and it can go and talk to different MCP servers. So you can see here a list of MCP servers that have already been preconfigured. And, if you wanted to add a new one, you could go ahead and configure your own as well there. So full support for Model Context Protocol right there within your agents. And very, very easy to use and to wire up. Okay. The final sort of capability that I want to show you about this agent is what we call agent-to-agent. So you'll notice here that I've got an Agent section on my Overview page and I've got one agent already hooked up called the Contoso Tax Advisor. Now I'm going to go ahead and click "Add Agent." You'll see that I get a choice here of a number of types of agents that I can choose from. In this case, I want to choose from agents already built in my environment in Copilot Studio. So you can see here that a number of these are grayed out and two of them aren't. The one is called Huckberry Product Assistant, the other one is called Contoso Vacation Advisor. I'm going to go ahead and select the Contoso Vacation Advisor. I can change the description here for how I want my agent to interact with it. And then I can go ahead and just add that agent. Now, once that's done, my host agent, the Employee Resources Agent, now knows that it has multiple agents that it can talk to. So, when I come over here and ask a question, and I'm going to say, "How much vacation do I get when I start as a new employee and how do I accrue more?" and interact with the agent. I am doing this through this Test pane you'll notice on the side. This is a great pane because it allows you to directly interact with your agent as you're building it and understand what kind of responses you're getting back. So, when I do that, we jump into what we call the Activity Map. And this is a really cool view because this is really where you start to see the chain of thought of the agent. So you see it actually thinking and working and trying to understand how it's going to respond to you. And you'll notice that it invoked the Vacation Advisor Agent, so that was that connected agent, it provided a description of where I found that information. And I can go back and sort of traverse that map, if you will, to understand how it got it. And then I can see that it says, "New employees receive 2 and 1/2 weeks of vacation upon hire. And, after one year of service, that vacation increases to 3 and 1/2 weeks." And, if I don't believe it, I can just go ahead and open up the document that came right directly from that agent as well. So you get all of that direct linking for validation and drill-through as needed. So very, very powerful and very, very cool.

[ Applause ]

Now, before we move on, I want to also show you that right from within Copilot Studio you can easily publish your agent to so many different sources. Now, again, this is a talk about M365 Copilot so, of course, that's where we're going to publish our agent. But you could see that you could publish it to a website, you could publish it to a ton of different other channels or applications. And, when you publish, you get to choose the availability options, you choose who you want it to be shared with, is it certain people or your entire organization. And then, once that's done, when you get over into M365 Copilot, you've got that agent already deployed here. And, just like what Abram showed you earlier, I'm going to go ahead and ask that same question and you'll see that I get the same answers. Now, here, this is sort of the employee view. Right? So I don't get all that chain of thought, I don't get all that debugging tools. But this would be the forward-facing view of that exact same answer. So very, very cool and, again, very, very easy to use and deploy all right there. Now, before I hand it back to Abram and before we move on into some of the pro-code experiences, I want to show one more thing. And that one more thing is that we are releasing today a brand-new extension for Visual Studio Code that allows you to edit your agents in Copilot Studio directly in VS Code. So what I'm going to do is go ahead and jump down to VS Code here. And you'll notice off to the left-hand side here I've got a brand-new extension that I just installed and it's the Copilot Studio extension. So I'm going to click "Clone Agent." And, when I do that, I've already authenticated, so it knows the environment that I'm a part of and it gives me a list of all of the agents that are in that environment. Now, we're going to pick the Contoso Employee Resources Agent, which we were just editing. And, when we do that, it's going to prompt me to pick a folder where I want to put this. So I'm going to create a new folder and call it "Employee Resource Agent." Now, what's happening is we're connecting to Copilot Studio and it's actually pulling down a definition of that agent directly to my local disk. And, if I go over here to the left-hand side, you will see that I can now browse all of the different capabilities of this particular agent and I can actually interact with those YAML files directly from VS Code instead of the WYSIWYG UI inside Copilot Studio. So super, super exciting. This is where we start to see low-code and pro-code start to blend in some really, really interesting ways. So, if I wanted to come up here --

[applause]

yeah, go ahead and clap, that's great, you'll notice that we get full language support, IntelliSense, we actually have a language server for the YAML structure beneath Copilot Studio agents. And, because GitHub Copilot is hooked up here, as I start to type, you'll see that it's going to start suggesting new things and it makes interacting with that agent very, very simple, very, very easy. From here, I can just push that back to the server and I've got my fully deployed agent again. So super cool. All right. So I'm going to jump back to slides. And we are going to watch a quick video from one of our great partners called Nintex who is usi

[ Music ]

Speaker 1: Today, we are showcasing an example of how you can build AI-powered automations with Nintex and Microsoft Copilot to streamline the employee onboarding process. You'll see how we use Nintex to trigger workflows and then generate and sign documents using e-sign all right from within Copilot Studio. We're going to step into the shoes of the HR team here at Safalo Finance. As Safalo onboards new employees, they have several documents that need to be downloaded, updated and then given to the new employee for signature. Given that their employees need to interact with legacy on-prem financial systems, they also have on-prem certification work that needs to be completed before the documents can be signed. Right now, this part of the process takes about 30 minutes between the two activities. Let's see how we can streamline this by introducing a new Copilot agent to help the HR team. Over in Copilot Studio, we can see our Employee Onboarding Agent. Here, we can see the instructions that have been provided to the agent to help it understand what tasks it will be performing and how it should interact with members of the HR team. Beyond the out-of-the-box AI capabilities, through Actions in Copilot Studio, you can connect agents out to external systems such as Nintex Workflow and Nintex K2. Here, you can see we have several different connected actions that will start our on-prem provisioning as well as our document generation workflow. If we jump over into Nintex Workflow, we can see that this workflow will use the collected information by the agent to populate our template documentation for us and then store these newly created files back into OneDrive. While Actions allow you to connect your agent to external services, Topics are really the brains of the agent and Copilot Studio allows you to customize how the agent should respond based on their interactions with the end user. If we step into one of these topics, you will see that it has the Intelligent Trigger and then we'll leverage our Actions such as starting our document generation workflow and then our on-prem provisioning with Nintex K2. Once the agent has been configured, we can then deploy these to various different locations where work gets done. Let's take a look at how this agent runs in Microsoft Teams. Here, we will provide some details about the new employee that's being onboarded. Then the agent will start various services such as generating our documentation. And, if we step over into OneDrive, we can see that a new folder has been created for the employee and their customized documents have been populated here by the Workflow. We can tell the agent, "These look good." And then we'll start our on-prem provisioning. And, if we jump over into the new employee's inbox, we can now see that an email has come in for them to sign their employee documentation. As you can see, what used to be a 30-minute segment of the onboarding process has now been streamlined down into about a two-minute interaction with our new Onboarding Agent. Ready to start building? Come learn more about Nintex and our new connector for the power platform at nintex.com/microsoft.

Aaron Bjork: All right. Big thanks to our friends at Nintex for putting that together.

[applause]

And, yeah, really excited to see what they're doing with agents and with Copilot Studio.

Abram Jackson: Yeah, what a cool scenario, really valuable. Now, for my favorite audience, professional developers. All right. I know that there are many professional developers here in the audience and we have not forgotten about you. We have saved you, the best, for last. Now, the Microsoft 365 Agents Toolkit and the Microsoft 365 Agents SDK are designed for professional developers, like many of you here in the audience. And it gives you full control, full power over these agent ingredients that we've been discussing. So back to the agent architecture and these ingredients. I bet you can imagine which ones of these are going to turn purple. Yes, it is all of them. Yes, you get full control. Now, we want you to build agents however you want to build the agents. If you want your own orchestrator, we want you to have that ability. And, when you build with this SDK, you can change out any part of this architecture. Now, also in this SDK, you can still build a declarative agent that uses our orchestrator or models or you can customize, use your own orchestration system that doesn't even have to have the name "Microsoft" in the title and you can choose where it runs. While we would love for this to run in Azure Foundry, it absolutely can run anywhere whatsoever where you're hosting your language models. So that is the idea. And it's my pleasure to be able to introduce to you, it was mentioned in the keynote, but I wanted to introduce it here to you all, the Microsoft 365 Agents Toolkit. This is how you can professionally build agents for Microsoft 365 Copilot. Now, first, I want to talk about how it's your solution to publish and manage agents and connectors and other Microsoft 365 applications. And it is an evolution of the team's toolkit, but it provides so much additional power. One of the places that you can now publish these agents to are Teams meetings. And so declarative agents or custom engine agents can now run in Teams Meetings. They can run in the licensed Microsoft 365 Copilot chat. They can run, for the unlicensed, for the available Microsoft 365 chat that is available for all users of Microsoft 365, whether you're using our orchestrator or your orchestrator or our models, your models, our tools, your tools, you have full flexibility when you're using this toolkit. It's integrated with Visual Studio Code. Many of you have been working with it already and you know that it is a high powered and extremely useful set of products. A couple of features that we are also adding into the toolkit. We heard your feedback, it was quite difficult to add custom actions into agents, so we're now introducing the ability to use TypeSpec. And there is a session on this later this week that you'll have to go to for details on that because we don't have time to get into it here. But it's a much simpler way than trying to manage hundreds of lines of an open API spec. And the coolest one that I'm most excited about is you can now call Office Add-ins as agent tools. If you've got add-ins, you can call them from your agent across Word, Excel and PowerPoint. I want to show you this demo. Now, LexisNexis already has a suite of fantastic products for legal professionals. It's an extremely powerful set of tools. But let's look at how they are integrating their agent with Lexis Create into Microsoft 365 Copilot. We're going to show two scenarios here. First is rewriting a clause. So we're in Word and we open up Copilot. And, here, in Word, you can see that your agent or the LexisNexis agent is available here. And we're looking at a Master Debt Restructuring Agreement. Don't ask me what that

means. But Lexis Create absolutely does understand what this means. When you select it in Word, that context is copied into the agent. And so your language model has that context and, in this case, Lexis is updating it to use the correct and formal language. When the user confirms, it has replaced that text right there in this Word document. But I want to show you something even cooler, in my opinion, is this feature that they have called "Shepardize." So, here, we're just going to ask the agent to shepardize the citations in this document. What this is doing, what shepardize means, is it finds all of the citations to case law and whatever attorneys use and checks them, checks their original description and write-ups as well as if they were overturned or if parts of it were overturned. It links all of these in the Word document throughout and adds icons so that the attorney can see whether these are still valid or need to be checked into or reworked in this program. Now, this is just one scenario. So we're introducing this now. For professional developers, this is going to be so powerful to edit and change anything in Word, Excel and PowerPoint. So totally excited to see what you build on this one. But we have one more product to talk to you about, which is the Microsoft 365 Agents SDK.

Aaron Bjork: All right. Thanks, Abram. Shepardize, too, that's a new term to me. Yeah, I didn't realize we were going to be making up words here, but that's good. I like it. I noticed it's trademarked, so. Yeah, really awesome to see what LexisNexis is doing with the toolkit. It is really exciting. So the other piece of the toolkit is the Microsoft 365 Agent SDK. And these are really sort of two in a box. So that's why we're talking about them together. The SDK is a full developer framework and it's designed to simplify the creation of full stack, multi-channel, enterprise-grade AI agents that can operate across M365, Teams, Copilot Studio and external platforms like Slack, Twilio and others. So full control here. And, like Abram pointed out, we want you to have the ability to build agents and put them anywhere. It provides foundational components for handling user interactions, orchestrating requests, reasoning over responses and it integrates with Azure AI, Semantic Kernel and third-party AI services. So full control. You choose your own orchestrator, you choose your own models, your knowledge, the provider you want and then deploy it where you want it. So we're really excited. We announced this in preview last year at Ignite. And it's now fully in GA. It supports C#, it supports Python and it supports JavaScript. So really excited about that. Now, we think this is the easiest path for building agents for any platform. So we definitely want you to go check it out. I'll provide you here a link in a second. But, before we jump into that, I want to give you sort of a quick demo of how this works and we'll take a look at it in action. So I'm going to jump into Visual Studio this time instead of VS Code. And, of course, we have support in VS Code, but we thought we'd show you both tools today. So I'm going to go ahead and just "File," "New" a "Project." Oops, if I can get my trackpad to work right. So, when I "File," "New" to "Project," we're all used to using templates in Visual Studio for our scaffolding, so I'm going to search for the Agent Template. And you'll notice here that we've got a brand-new set of templates called "Microsoft 365 Agents." So let's go ahead and select that. We'll give our project a name and pick the location of it. The default here seems to look fine so I'm going to move on. And then you'll notice that we've got a few

different types of projects that we can get started with. So Abram mentioned declarative agents and custom engine agents. We're not going to go into all those details, but there's a few different patterns that you can use. And you'll notice that we've got an agent that works with an API, we've got a basic agent for Teams, we've got a declarative agent, we've got an empty agent. So a lot of different sort of scaffolded projects that you can get out of the box here. You choose the one that works for you. In this case, I'm just going to do a very, very simple Weather Agent because we've got a great sort of emulator that shows you how this work. And then the wizard is then going to ask us where do we want to get our large language models from, so what services do we want. Now, today, we support two out of the box. Of course, we support OpenAPI -- sorry, OpenAI. Getting my APIs confused there. And then we also have Azure OpenAI. In this case, I'm going to choose Azure OpenAI and I'm going to paste in here my service key, the endpoint where my model is at and then the deployment name. And then I'm going to go ahead and click "Create." Now, at this point, we're going to get a scaffolded out, fully created agent that is ready to use and ready to interact with. You'll notice here that we've got two projects. They're all popped into the same solution. We've got our agent instructions, the agent name, connection point to the model. I'm just going to go ahead and run this and you'll notice that it builds right out of the gate. It's going to open up in the emulator here, which allows us to sort of interact with that agent. So let's put these side by side so we can see it. And then, at this point, I'm going to go ahead and interact with that agent. So let's just say, "Hi." You'll notice here you can see the commands coming back here in the output window. And then I'm going to ask it a very simple question, "Compare the average rainfall of Seattle, Washington to Boston, Massachusetts." I don't know if we have any Boston people in the audience, but we'll see which comes back. And you'll notice there that we get back a direct answer formatted as an adaptive card. Again, we have full control over how we want that to come back. And we can get started from there. So, at this point, we've got a fully built, fully scaffolded interactive agent built with pro-code, in this case, connected to Azure OpenAI connected to a model that we've got pre-deployed there. And you can see that I built it in a matter of minutes. At this point, I can take this agent and I can interact with it in any way that I want. It's really a starting point, but I can make it sort of completely tailored to my heart's desire. So pro-code at your fingertips ready to go and fully using and built on the M365 Agents SDK. So really excited about that.

[ Applause ]

Abram Jackson: So I think that might have been a lot for everybody across Agent Builder, Copilot Studio, the Agent Toolkit and the Agents SDK. And we did not talk about all of the new features in all of these things. There's still a lot more. And we do want to leave time for you to get to the NVIDIA mixer back on the other building. So there are other sessions throughout Build. If you're here in person, you can see these in the next few days. If you're watching this online, they will also be posted online.

Aaron Bjork: Yeah, we've got more details on building agents, architecting agents, multi-agent systems with Copilot Studio, lots more on the Agents SDK, we've got labs. If you want to know how to use MCP and Copilot Studio, we've got a full session on that. And lots that you can get your hands on and play with. Right?

Abram Jackson: Absolutely. We're also having an Agent Instructions Contest, we have the OpenHack. There are so many ways that you can interact with us, the Product team, and other experts across all of these technologies. And we, of course, have full documentation, examples, on-your-own labs. Whether you're at Build, watching online, you can be building these agents for Microsoft 365 Copilot using these common instructions having these agents work with each other, interact with each other and deploy them to all Microsoft 365 users. Both Abram and I are going to be here at Build for the rest of this week so we hope that, if you have questions, please come find us. We are going to take Q&amp;A out in the hallway afterwards. The staff here has asked us that end of the day they want to tear things down. So, if you want to chat, we'll be out in the hallway. But thanks for coming and we hope you have a great rest of the Build.

[ Applause ]

END